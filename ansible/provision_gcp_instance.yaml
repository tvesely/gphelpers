---
- name: Create an instance
  hosts: localhost
  gather_facts: yes
  vars:
      home: "{{ lookup('env','HOME') }}"
      gcp_cred_kind: serviceaccount
      gcp_project: "{{ lookup('env', 'ANSIBLE_GCP_PROJECT') }}"
      gcp_instance_name: "{{ lookup('env', 'ANSIBLE_GCP_INSTANCE_NAME') }}"
      gcp_instance_type: "{{ lookup('env', 'ANSIBLE_GCP_INSTANCE_TYPE') }}"
      gcp_key_file: "{{ lookup('env', 'ANSIBLE_SSH_KEY_FILE') }}"
      gcp_networkname: "{{ lookup('env', 'ANSIBLE_GCP_NETWORK_NAME') }}"
      gcp_user: "{{ lookup('env', 'ANSIBLE_USER') }}"
      gcp_zone: "{{ lookup('env', 'ANSIBLE_GCP_ZONE') }}"
      gcp_service_account_file: "{{ lookup('env', 'ANSIBLE_GCP_SERVICE_ACCOUNT_FILE') }}"
      gcp_service_account_contents: "{{ lookup('file', gcp_service_account_file) | string }}"

  pre_tasks:
    - name: Manditory variables
      assert:
        that:
          - gcp_project != ""
          - gcp_project != ""
          - gcp_instance_name != ""
          - gcp_instance_type != ""
          - gcp_key_file != ""
          - gcp_networkname != ""
          - gcp_user != ""
          - gcp_zone != ""
          - gcp_service_account_file != ""
          - gcp_service_account_contents != ""
        fail_msg: "Environment not fully defined. Please source set-secrets.sh before running this script"
    - name: Generate gcp oslogin keyfile if it does not exist
      openssh_keypair:
        path: "{{ gcp_key_file }}"
      register: gcp_keypair
    - name: Add ssh keyfile to gcloud for user {{ gcloud_user }}
      command: "gcloud compute os-login ssh-keys add --key='{{ gcp_keypair.public_key }}'"

  tasks:
   - name: create a network
     gcp_compute_network:
         name: '{{ gcp_networkname }}'
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         service_account_contents: "{{ gcp_service_account_contents }}"
         state: present
     register: network
   - name: create an instance
     gcp_compute_instance:
         state: present
         name: "{{ gcp_instance_name }}"
         machine_type: "{{ gcp_instance_type }}"
         disks:
           - auto_delete: true
             boot: true
             initialize_params:
               source_image: 'projects/ubuntu-os-cloud/global/images/family/ubuntu-1804-lts'
           - type: SCRATCH
             device_name: local-ssd-0
             auto_delete: yes
             interface: NVME
             mode: READ_WRITE
             initialize_params:
               disk_type: pd-ssd
           - type: SCRATCH
             device_name: local-ssd-1
             auto_delete: yes
             interface: NVME
             mode: READ_WRITE
             initialize_params:
               disk_type: pd-ssd
           - type: SCRATCH
             device_name: local-ssd-2
             auto_delete: yes
             interface: NVME
             mode: READ_WRITE
             initialize_params:
               disk_type: pd-ssd
           - type: SCRATCH
             device_name: local-ssd-3
             auto_delete: yes
             interface: NVME
             mode: READ_WRITE
             initialize_params:
               disk_type: pd-ssd
           - type: SCRATCH
             device_name: local-ssd-4
             auto_delete: yes
             interface: NVME
             mode: READ_WRITE
             initialize_params:
               disk_type: pd-ssd
           - type: SCRATCH
             device_name: local-ssd-5
             auto_delete: yes
             interface: NVME
             mode: READ_WRITE
             initialize_params:
               disk_type: pd-ssd
         metadata:
           enable-oslogin: true
         network_interfaces:
             - network: "{{ network }}"
               access_configs:
                 - name: 'External NAT'
                   type: 'ONE_TO_ONE_NAT'
         zone: "{{ gcp_zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_contents: "{{ gcp_service_account_contents }}"
         scopes:
           - https://www.googleapis.com/auth/compute
     register: instance

   - name: Wait for SSH to come up
     wait_for: host={{ instance.networkInterfaces[0].accessConfigs[0].natIP }} port=22 delay=10 timeout=60

   - name: Add host to groupname
     add_host: hostname={{ instance.networkInterfaces[0].accessConfigs[0].natIP }} groupname=workstation_instances

- name: Manage workstation instances
  hosts: workstation_instances
  connection: ssh
  gather_facts: yes
  vars:
      # common/git
      git_user: [GIT_USER_NAME]
      git_email: [GIT_EMAIL]
      postgres_config: {}

      # Running in WSL?
      is_wsl: no
      # Running in Vagrant?
      is_vagrant: no
      lvm_devices:
        - /dev/nvme0n1
        - /dev/nvme0n2
        - /dev/nvme0n3
        - /dev/nvme0n4
        - /dev/nvme0n5
        - /dev/nvme0n6
  roles:
    - config_gcp_disks
    - common
    - dev_tools
    - postgres_dev
    - build_postgres
    - gen_postgres_cluster
    - tpc_ds_gen

